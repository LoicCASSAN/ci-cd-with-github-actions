name: Python Flask CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t my-flask-app .

      # Test unitaires dans un conteneur distinct
      - name: Run Docker container for unit tests
        run: docker run -d --name flask-unit-tests my-flask-app

      - name: Run unit tests in Docker container
        run: docker exec flask-unit-tests python -m unittest test-app.py

      - name: Remove Docker container for unit tests
        run: docker rm -f flask-unit-tests

      # Tests d'intégration dans un autre conteneur
      - name: Run Docker container for integration tests
        run: docker run -d --name flask-integration-tests -p 5000:5000 my-flask-app

      - name: Wait for Selenium service to be ready
        run: |
          while ! curl -sSL "http://localhost:4444/wd/hub/status" \
              | jq -r '.value.ready' | grep 'true' > /dev/null; do
            echo 'Waiting for the Selenium service...'
            sleep 5
          done

          - name: Run integration tests with Selenium
          run: python test-endtoend-app.py
          env:
            SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub
            APP_URL: http://localhost:5000
  
      - name: Remove Docker container for integration tests
        run: docker rm -f flask-integration-tests
  
      # Étape de déploiement (exemple avec DockerHub)
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
      - name: Push Docker image to DockerHub
        run: docker push my-flask-app
  
      # Nettoyage final
      - name: Remove Docker image
        run: docker rmi my-flask-app
  